import React, { useState, useEffect } from 'react';
import Card from './Card';
import Button from './Button';

export default function PostList() {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [search, setSearch] = useState('');

  useEffect(() => {
    async function fetchPosts() {
      try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts');
        if (!response.ok) throw new Error('Failed to fetch posts');
        const data = await response.json();
        setPosts(data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    }
    fetchPosts();
  }, []);

  const filteredPosts = posts.filter(post =>
    post.title.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <Card title="ðŸ“° Latest Posts">
      <input
        type="text"
        placeholder="Search posts"
        value={search}
        onChange={e => setSearch(e.target.value)}
        className="w-full mb-4 px-3 py-2 border rounded dark:bg-gray-800 dark:text-white"
      />

      {loading && <p className="text-blue-500">Loading...</p>}
      {error && <p className="text-red-500">Error: {error}</p>}

      {!loading && !error && (
        <ul className="grid gap-4">
          {filteredPosts.slice(0, 10).map(post => (
            <li key={post.id} className="p-4 border rounded shadow dark:bg-gray-900">
              <h3 className="text-lg font-bold">{post.title}</h3>
              <p className="text-gray-600 dark:text-gray-300">{post.body}</p>
            </li>
          ))}
        </ul>
      )}
    </Card>
  );
}
